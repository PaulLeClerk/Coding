<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.antivirus">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.AntiSpywareApp">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/scanButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Scan for Threats"
        android:layout_centerInParent="true" />

    <TextView
        android:id="@+id/resultTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/scanButton"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="20dp"
        android:text="Scan results will appear here."
        android:textSize="16sp" />
</RelativeLayout>

package com.example.antivirus

import android.content.pm.ApplicationInfo
import android.content.pm.PackageManager
import android.net.ConnectivityManager
import android.net.NetworkCapabilities
import android.os.Bundle
import android.widget.Button
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    private lateinit var scanButton: Button
    private lateinit var resultTextView: TextView

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        scanButton = findViewById(R.id.scanButton)
        resultTextView = findViewById(R.id.resultTextView)

        scanButton.setOnClickListener {
            scanForThreats()
        }
    }

    private fun scanForThreats() {
        val suspiciousApps = checkInstalledApps()
        val networkIssues = checkNetworkActivity()

        val result = StringBuilder()

        if (suspiciousApps.isNotEmpty()) {
            result.append("Suspicious Apps Detected:\n")
            suspiciousApps.forEach { app ->
                result.append("- ${app.packageName}\n")
            }
        } else {
            result.append("No suspicious apps detected.\n")
        }

        if (networkIssues) {
            result.append("Unusual network activity detected.\n")
        } else {
            result.append("No unusual network activity detected.\n")
        }

        resultTextView.text = result.toString()
    }

    private fun checkInstalledApps(): List<ApplicationInfo> {
        val packageManager = packageManager
        val installedApps = packageManager.getInstalledApplications(PackageManager.GET_META_DATA)
        val suspiciousApps = mutableListOf<ApplicationInfo>()

        // Define some basic criteria for suspicious apps (this is simplified)
        val suspiciousKeywords = listOf("spy", "monitor", "track", "hack")

        for (app in installedApps) {
            val appName = packageManager.getApplicationLabel(app).toString().lowercase()
            for (keyword in suspiciousKeywords) {
                if (appName.contains(keyword) || app.packageName.contains(keyword)) {
                    suspiciousApps.add(app)
                    break
                }
            }
        }

        return suspiciousApps
    }

    private fun checkNetworkActivity(): Boolean {
        val connectivityManager = getSystemService(CONNECTIVITY_SERVICE) as ConnectivityManager
        val network = connectivityManager.activeNetwork ?: return false
        val capabilities = connectivityManager.getNetworkCapabilities(network) ?: return false

        return capabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET) &&
                !capabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_NOT_METERED)
    }
}

    Connect an Android device or use an emulator.
    Build and run the app from Android Studio.
